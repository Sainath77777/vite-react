name: Deploy

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ' 18.x'

      - name: Install dependencies
        uses: npm install
      

      - name: Run tests with coverage
        run: npm run test:coverage

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=ReactTest \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      - name: Check code coverage
        id: coverage
        run: |
          COVERAGE=$(npx jest --coverage --coverageReporters json-summary && cat coverage/coverage-summary.json | jq .total.lines.pct)
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        continue-on-error: true
 
      - name: Fail if coverage is below 80%
        run: |
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Code coverage is below 80%"
            exit 1
          fi
      - name: Echo
        run : echo "Hi"

    
